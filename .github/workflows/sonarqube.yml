# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

# This workflow helps you trigger a SonarQube analysis of your code and populates
# GitHub Code Scanning alerts with the vulnerabilities found.
# (this feature is available starting from SonarQube 9.7, Developer Edition and above)

# 1. Make sure you add a valid GitHub configuration to your SonarQube (Administration > DevOps platforms > GitHub)

# 2. Import your project on SonarQube
#     * Add your repository as a new project by clicking "Create project" from your homepage.
#
# 3. Select GitHub Actions as your CI and follow the tutorial
#     * a. Generate a new token and add it to your GitHub repository's secrets using the name SONAR_TOKEN
#          (On SonarQube, click on your avatar on top-right > My account > Security or ask your administrator)
#
#     * b. Copy/paste your SonarQube host URL to your GitHub repository's secrets using the name SONAR_HOST_URL
#
#     * c. Copy/paste the project Key into the args parameter below
#          (You'll find this information in SonarQube by following the tutorial or by clicking on Project Information at the top-right of your project's homepage)

# Feel free to take a look at our documentation (https://docs.sonarqube.org/latest/analysis/github-integration/)
# or reach out to our community forum if you need some help (https://community.sonarsource.com/c/sq/10)

name: SonarQube analysis

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
  workflow_dispatch:

permissions:
  pull-requests: read # allows SonarQube to decorate PRs with analysis results

jobs:
  Analysis:
    runs-on: ubuntu-latest

    steps:
      - name: Analyze with SonarQube

        # You can pin the exact commit or the version.
        # uses: SonarSource/sonarqube-scan-action@v1.1.0
        uses: SonarSource/sonarqube-scan-action@7295e71c9583053f5bf40e9d4068a0c974603ec8
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}   # Generate a token on SonarQube, add it to the secrets of this repo with the name SONAR_TOKEN (Settings > Secrets > Actions > add new repository secret)
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}   # add the URL of your instance to the secrets of this repo with the name SONAR_HOST_URL (Settings > Secrets > Actions > add new repository secret)
        with:
          # Additional arguments for the sonarcloud scanner
          args:
            # Unique key of your project. You can find it in SonarQube > [my project] > Project Information (top-right menu)
            # mandatory
            -Dsonar.projectKey=
            # Comma-separated paths to directories containing main source files.
            #-Dsonar.sources= # optional, default is project base directory
            # When you need the analysis to take place in a directory other than the one from which it was launched
            #-Dsonar.projectBaseDir= # optional, default is .
            # Comma-separated paths to directories containing test source files.
            #-Dsonar.tests= # optional. For more info about Code Coverage, please refer to https://docs.sonarcloud.io/enriching/test-coverage/overview/
            # Adds more detail to both client and server-side analysis logs, activating DEBUG mode for the scanner, and adding client-side environment variables and system properties to the server-side log of analysis report processing.
            #-Dsonar.verbose= # optional, default is {"is_simulated":1,"app_name":"AccessibilityUIServer","timestamp":"2024-03-09 10:34:29.00 -0500","app_version":"1.0","slice_uuid":"806a0de2-e40e-3ebe-9573-ac23b35600b7","build_version":"1","platform":2,"bundleID":"com.apple.AccessibilityUIServer","share_with_app_devs":0,"is_first_party":1,"bug_type":"308","os_version":"iPhone OS 17.4 (21E219)","roots_installed":0,"name":"AccessibilityUIServer","incident_id":"A2B42CC5-8461-44F2-8D8F-4C4752A8A9F6"}
{
  "uptime" : 600,
  "procRole" : "Unspecified",
  "version" : 2,
  "userID" : 501,
  "deployVersion" : 210,
  "modelCode" : "iPhone14,7",
  "coalitionID" : 1034,
  "osVersion" : {
    "isEmbedded" : true,
    "train" : "iPhone OS 17.4",
    "releaseType" : "User",
    "build" : "21E219"
  },
  "captureTime" : "2024-03-09 10:34:29.0271 -0500",
  "codeSigningMonitor" : 2,
  "incident" : "A2B42CC5-8461-44F2-8D8F-4C4752A8A9F6",
  "pid" : 734,
  "cpuType" : "ARM-64",
  "roots_installed" : 0,
  "bug_type" : "308",
  "procStartAbsTime" : 13913183466,
  "procName" : "AccessibilityUIServer",
  "procPath" : "\/System\/Library\/CoreServices\/AccessibilityUIServer.app\/AccessibilityUIServer",
  "bundleInfo" : {"CFBundleShortVersionString":"1.0","CFBundleVersion":"1","CFBundleIdentifier":"com.apple.AccessibilityUIServer"},
  "storeInfo" : {"deviceIdentifierForVendor":"DB41BFE5-20E8-437F-ADE4-76CB8CB022C8"},
  "parentPid" : 1,
  "coalitionName" : "com.apple.AccessibilityUIServer",
  "crashReporterKey" : "c07f5caa8f209945ba34181f048dc824ff621639",
  "ldm" : 1,
  "wasUnlockedSinceBoot" : 1,
  "isLocked" : 0,
  "codeSigningValidationCategory" : 0,
  "codeSigningTrustLevel" : 0,
  "basebandVersion" : "2.51.04",
  "isLightWeightCorpse" : 1,
  "exception" : {"codes":"0x6000000000000007, 0x0000000000000009","reason":9,"message":"namespc 7 reason_code 0x0000000000000009","subtype":"GUARD_TYPE_USER","type":"EXC_GUARD","rawCodes":[6917529027641081863,9],"namespc":7},
  "termination" : {"flags":518,"code":9,"namespace":"LIBXPC","indicator":"XPC_EXIT_REASON_FAULT"},
  "faultingThread" : 0,
